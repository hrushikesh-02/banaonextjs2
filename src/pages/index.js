import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import ListItem from "../../components/ListItem";
import userpic from "../../resources/userpic.png";
import axios from "axios";
import { useEffect, useState } from "react";
import Detail from "../../components/Detail";

export default function Home() {
  const [userList, setUserList] = useState([]);
  const [loadingStatus, setLoadingStatus] = useState(true);

  const API_BASE_URL = "https://602e7c2c4410730017c50b9d.mockapi.io/users ";

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(API_BASE_URL);
        setUserList(response.data);
        setLoadingStatus(false);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchData();
  }, []);

  const [clickedElement, setclickedElement] = useState({
    fname: "",
    lname: "",
    bio: "",
    username: "",
    job: "",
    email: "",
  });

  return (
    <>
      <Head>
        <title>Task 2</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.parent}>
        <div className={styles.userList}>
          <h1 className={styles.header}>Users List</h1>
          {loadingStatus ? (
            <div className={styles.spinners}>
              <div className="spinner-grow spinner-grow-sm" role="status">
                <span className="visually-hidden">Loading...</span>
              </div>
              <div className="spinner-grow spinner-grow-sm" role="status">
                <span className="visually-hidden">Loading...</span>
              </div>
              <div className="spinner-grow spinner-grow-sm" role="status">
                <span className="visually-hidden">Loading...</span>
              </div>
            </div>
          ) : (
            <></>
          )}
          {userList.map((item, ind) => {
            return (
              <ListItem
                key={ind}
                id={ind}
                pic={userpic}
                fname={item.firstName}
                lname={item.profile.lastName}
                bio={item.Bio}
                username={item.profile.username}
                email={item.profile.email}
                job={item.jobTitle}
                updater={setclickedElement}
              />
            );
          })}
        </div>
        <div className={styles.detail}>
          <Detail
            fname={clickedElement.fname}
            lname={clickedElement.lname}
            bio={clickedElement.bio}
            username={clickedElement.username}
            email={clickedElement.email}
            job={clickedElement.job}
          />
        </div>
      </div>
    </>
  );
}
